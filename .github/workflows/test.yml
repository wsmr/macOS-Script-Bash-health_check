name: macOS Health Check Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  shellcheck:
    runs-on: ubuntu-latest
    name: Shell Script Analysis
    steps:
      - uses: actions/checkout@v4
      
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          scandir: '.'
          format: gcc
          severity: warning
          
  syntax-test:
    runs-on: macos-latest
    name: macOS Syntax Test
    steps:
      - uses: actions/checkout@v4
      
      - name: Check script syntax
        run: |
          bash -n macos_health_check.sh
          echo "‚úÖ Script syntax is valid"
      
      - name: Make script executable
        run: chmod +x macos_health_check.sh
      
      - name: Test script execution (dry run)
        run: |
          # Test that script starts without errors
          timeout 10s ./macos_health_check.sh || true
          echo "‚úÖ Script execution test completed"

  documentation:
    runs-on: ubuntu-latest
    name: Documentation Check
    steps:
      - uses: actions/checkout@v4
      
      - name: Check README exists
        run: |
          if [ ! -f README.md ]; then
            echo "‚ùå README.md is missing"
            exit 1
          fi
          echo "‚úÖ README.md exists"
      
      - name: Check LICENSE exists  
        run: |
          if [ ! -f LICENSE ]; then
            echo "‚ùå LICENSE is missing"
            exit 1
          fi
          echo "‚úÖ LICENSE exists"
          
      - name: Check CHANGELOG exists
        run: |
          if [ ! -f CHANGELOG.md ]; then
            echo "‚ùå CHANGELOG.md is missing"
            exit 1
          fi
          echo "‚úÖ CHANGELOG.md exists"

  security-scan:
    runs-on: ubuntu-latest
    name: Security Scan
    steps:
      - uses: actions/checkout@v4
      
      - name: Run security checks
        run: |
          # Check for common security issues
          echo "üîç Checking for potential security issues..."
          
          # Check for hardcoded credentials
          if grep -r "password\|secret\|key" --include="*.sh" --exclude-dir=.git . | grep -v "üí°\|#\|echo"; then
            echo "‚ö†Ô∏è  Potential hardcoded credentials found"
          else
            echo "‚úÖ No hardcoded credentials detected"
          fi
          
          # Check for unsafe commands
          if grep -r "rm -rf /\|chmod 777\|sudo rm" --include="*.sh" --exclude-dir=.git .; then
            echo "‚ö†Ô∏è  Potentially unsafe commands found"
          else
            echo "‚úÖ No obviously unsafe commands detected"
          fi

  examples-validation:
    runs-on: ubuntu-latest
    name: Validate Examples
    steps:
      - uses: actions/checkout@v4
      
      - name: Check example files exist
        run: |
          EXAMPLES_DIR="examples"
          REQUIRED_EXAMPLES=("normal_system.txt" "spotlight_rebuilding.txt" "system_overload.txt")
          
          if [ ! -d "$EXAMPLES_DIR" ]; then
            echo "‚ùå Examples directory missing"
            exit 1
          fi
          
          for example in "${REQUIRED_EXAMPLES[@]}"; do
            if [ ! -f "$EXAMPLES_DIR/$example" ]; then
              echo "‚ùå Example file missing: $example"
              exit 1
            else
              echo "‚úÖ Example file exists: $example"
            fi
          done
          
      - name: Validate example content
        run: |
          echo "üîç Validating example file content..."
          for file in examples/*.txt; do
            if [ -s "$file" ]; then
              echo "‚úÖ $file has content"
            else
              echo "‚ùå $file is empty"
              exit 1
            fi
          done
